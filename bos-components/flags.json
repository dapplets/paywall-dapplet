{
  "components": {
    "paywall.near/widget/PaywallDapplet-Content": {
      "code": "const { contentId, accountId, onBuy, onConnect, loading, basic } = props;\n\nfunction getContentById(contentId) {\n  return {\n    id: contentId,\n    blurredImage:\n      \"https://miscellaneous.s3-website.fr-par.scw.cloud/web3hackfest-2023/1691462269182611456-blur.png\",\n    originalImage:\n      \"https://miscellaneous.s3-website.fr-par.scw.cloud/web3hackfest-2023/1691462269182611456-original.png\",\n  };\n}\n\nconst content = getContentById(contentId);\n\nif (!content) {\n  return <></>;\n}\n\nconst isPurchased = accountId\n  ? Near.view(\n      \"app.paywall.near\",\n      \"purchased\",\n      {\n        account_id: accountId,\n        content_id: contentId,\n      },\n      \"final\",\n      true\n    )\n  : false;\n\nconst price = \"0.5\";\n\nconst Wrapper = styled.div`\n  .content-blur-wrapper {\n    overflow: hidden;\n    width: 100%;\n    margin-top: 12px;\n    border-radius: 16px;\n    border: 1px solid rgb(207, 217, 222);\n    aspect-ratio: 1.777;\n    cursor: default;\n    position: relative;\n  }\n\n  .content-wrapper-basic {\n    overflow: hidden;\n    width: 100%;\n    border-radius: 4px;\n    aspect-ratio: 1.777;\n    position: relative;\n  }\n\n  .unlock-content-overlay {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 16px;\n    background-color: rgba(255, 255, 255, 0.6);\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  .unlock-content-overlay > .text {\n    color: #000;\n    text-align: center;\n    font-family: Helvetica;\n    font-size: 15px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n  }\n\n  .unlock-content-overlay > .price {\n    color: #000;\n    text-align: center;\n    font-family: Helvetica;\n    font-size: 28px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n  }\n\n  .unlock-content-overlay > .main-button {\n    display: flex;\n    padding: 10px 40px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 20px;\n    background: #1d9bf0;\n    color: #fff;\n    text-align: center;\n    font-family: Helvetica;\n    font-size: 15px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n    border: none;\n    cursor: pointer;\n    transition-duration: 0.2s;\n  }\n\n  .unlock-content-overlay > .main-button:hover {\n    background-color: rgb(26, 140, 216);\n  }\n\n  .unlock-content-overlay > .main-button:disabled {\n    background: #99cdf8;\n    cursor: default;\n  }\n\n  .content-image {\n    width: 100%;\n  }\n`;\n\nconst Loader = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20px\"\n    height=\"20px\"\n    viewBox=\"0 0 100 100\"\n    preserveAspectRatio=\"xMidYMid\"\n  >\n    <circle\n      cx=\"50\"\n      cy=\"50\"\n      fill=\"none\"\n      stroke=\"#ffffff\"\n      strokeWidth=\"10\"\n      r=\"35\"\n      strokeDasharray=\"164.93361431346415 56.97787143782138\"\n    >\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        repeatCount=\"indefinite\"\n        dur=\"1s\"\n        values=\"0 50 50;360 50 50\"\n        keyTimes=\"0;1\"\n      ></animateTransform>\n    </circle>\n  </svg>\n);\n\nreturn (\n  <Wrapper>\n    <div className={basic ? \"content-wrapper-basic\" : \"content-blur-wrapper\"}>\n      {isPurchased === null ? null : isPurchased ? (\n        <img className=\"content-image\" src={content.originalImage} />\n      ) : (\n        <>\n          <img className=\"content-image\" src={content.blurredImage} />\n          {accountId ? (\n            <div className=\"unlock-content-overlay\">\n              <div className=\"text\">Unlock this Tweet</div>\n              <div className=\"price\">{price} $NEAR</div>\n              <button\n                className=\"main-button\"\n                onClick={() => onBuy?.({ contentId, price })}\n                disabled={loading}\n              >\n                {loading ? <Loader /> : \"Buy\"}\n              </button>\n            </div>\n          ) : (\n            <div className=\"unlock-content-overlay\">\n              <div className=\"text\">Unlock this Tweet</div>\n              <div className=\"price\">{price} $NEAR</div>\n              <button\n                className=\"main-button\"\n                onClick={() => onConnect?.()}\n                disabled={loading}\n              >\n                {loading ? <Loader /> : \"Connect Wallet\"}\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  </Wrapper>\n);\n"
    },
    "paywall.near/widget/PaywallDapplet-TwitterButton": {
      "code": "const Wrapper = styled.div`\n  .button-default {\n    cursor: pointer;\n    user-select: none;\n\n    box-sizing: border-box;\n    height: 35px;\n    margin: 0 8px 12px 0;\n    padding: 0 10px;\n\n    font-family: TwitterChirp, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n      Roboto, Helvetica, Arial, sans-serif;\n    font-size: 15px;\n    font-weight: 600;\n    line-height: 33px;\n\n    background: inherit;\n    border-radius: 9999px;\n\n    transition: background-color 0.2s ease-in-out;\n    display: flex;\n  }\n\n  .button-light {\n    color: #000;\n    border: 1px solid rgb(207 217 222);\n  }\n\n  .button-light:hover {\n    background-color: rgb(15 20 25 / 10%);\n  }\n\n  .button-dark {\n    color: #fff;\n    border: 1px solid rgb(83 100 113);\n  }\n\n  .button-dark:hover {\n    background-color: rgb(239 243 244 / 10%);\n  }\n\n  .button-img-display {\n    fill: currentcolor;\n    height: auto;\n    max-width: 100%;\n    position: relative;\n    vertical-align: text-bottom;\n    width: 1.25em;\n    margin: auto 0;\n    display: flex !important;\n    align-items: center !important;\n  }\n`;\n\nreturn (\n  <Wrapper>\n    <div\n      role=\"button\"\n      className={`button-default ${\n        props.dark ? \"button-dark\" : \"button-light\"\n      }`}\n      onClick={() => props.onClick?.()}\n      style={{\n        opacity: props.disabled ? \".5\" : \"1\",\n      }}\n      disabled={props.disabled}\n    >\n      <div\n        style={{\n          opacity: props.disabled ? \".5\" : \"1\",\n          display: \"flex\",\n          alignItems: \"center\",\n          marginRight: props.label?.toString() ? \"12px\" : 0,\n        }}\n      >\n        <img src={props.icon} className=\"button-img-display\" />\n      </div>\n      <div>\n        <span>{props.label}</span>\n      </div>\n    </div>\n  </Wrapper>\n);\n"
    },
    "paywall.near/widget/PaywallDapplet-Overlay": {
      "code": "/**\n * We use buyerAccountId instead of accountId because it's reserved parameter in embeded pages\n * https://github.com/near/near-discovery/blob/dc58aa1c8ef5d4c0a5e19839230148009834088a/src/pages/embed/%5BaccountId%5D/widget/%5BcomponentName%5D.tsx#L16\n */\nconst { buyerAccountId } = props;\n\nconst Wrapper = styled.div`\n  .main-container {\n    padding: 15px;\n    background: #f5f5f5;\n\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n      Helvetica, Arial, sans-serif;\n\n    height: calc(100vh - 14px);\n    width: 100%;\n  }\n\n  .top-description {\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 21px;\n    margin-bottom: 10px;\n    color: #747376;\n  }\n\n  .content-container {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    padding: 10px;\n    gap: 10px;\n    align-self: stretch;\n    border-radius: 10px;\n    border: 1px solid #e3e3e3;\n  }\n\n  .content-card {\n    background-color: #fff;\n    border-radius: 4px;\n    padding: 10px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .content-container-id {\n    color: #919191;\n    font-size: 12px;\n  }\n`;\n\nif (!buyerAccountId) {\n  return (\n    <Wrapper>\n      <div className=\"main-container\">\n        <div className=\"top-description\">\n          The Paywall Dapplet seamlessly integrates with Twitter, utilizing the\n          NEAR Protocol and NEAR BOS to display paid content, a solution\n          developed during the Web3 Hackfest 2023 hackathon.\n        </div>\n        <div className=\"top-description\">Connect your wallet</div>\n      </div>\n    </Wrapper>\n  );\n}\n\nconst purchases = buyerAccountId\n  ? Near.view(\n      \"app.paywall.near\",\n      \"purchases\",\n      {\n        account_id: buyerAccountId,\n      },\n      \"final\",\n      true\n    )\n  : false;\n\nif (purchases === null) {\n  return (\n    <Wrapper>\n      <div className=\"main-container\">\n        <div className=\"top-description\">\n          The Paywall Dapplet seamlessly integrates with Twitter, utilizing the\n          NEAR Protocol and NEAR BOS to display paid content, a solution\n          developed during the Web3 Hackfest 2023 hackathon.\n        </div>\n      </div>\n    </Wrapper>\n  );\n}\n\nreturn (\n  <Wrapper>\n    <div className=\"main-container\">\n      <div className=\"top-description\">\n        The Paywall Dapplet seamlessly integrates with Twitter, utilizing the\n        NEAR Protocol and NEAR BOS to display paid content, a solution developed\n        during the Web3 Hackfest 2023 hackathon.\n      </div>\n      <div className=\"content-container\">\n        {purchases.map((contentId) => (\n          <div className=\"content-card\">\n            <Widget\n              key={contentId}\n              src={`paywall.near/widget/PaywallDapplet-Content`}\n              props={{\n                accountId: buyerAccountId,\n                contentId: contentId,\n                basic: true,\n              }}\n            />\n            <div className=\"content-container-id\">id: {contentId}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  </Wrapper>\n);\n"
    }
  }
}